#!/bin/sh

#LOCATION="42.134028,-123.639673" # Cave Junction OR, USA
#LOCATION="-34.559136,-58.463755" # CABA
# LOCATION="41.367,2.135" # Barcelona
# LOCATION="36.79243,-6.31457" # SanlÃºcar
# LOCATION="39.474153,-0.377866" # Valencia
LOCATION="39.485487,-0.3612157" # Valencia, Benimaclet

# Variables
weatherreport="${XDG_DATA_HOME:-$HOME/.local/share}/weatherreport"
temp="$HOME/.local/share/temp_now"

#icons
snow_icon="ï‹œ"
sun_icon="ï”¢"

isOldAndIsInet () {
		# Update solo con inet y si el Ãºltimo update son mÃ¡s viejos que la edad objetivo
		#showweather;
		ping -q -c 1 1.1.1.1 >/dev/null 2>&1 &&
    { [ -f "$temp" ] &&
      [ $(( $(date "+%s") - $(stat -c %Y "$temp"))) -ge 1800 ] &&
      find "$temp" -delete;
      [ -f "$weatherreport" ] &&
        [ $(( $(date "+%s") - $(stat -c %Y "$weatherreport"))) -ge 1800 ] &&
      find "$weatherreport" -delete;
    }
}

showweather() {
	printf "%s " "$(sed '16q;d' "$weatherreport" |
	grep -wo "[0-9]*%" | sort -rn | sed "s/^/â˜” /g;1q" | tr -d '\n')";
	sed '13q;d' "$weatherreport" |
  grep -o "m\\([-+]\\)*[0-9]\\+" |
  sort -n -t 'm' -k 2n | sed -e 1b -e '$!d' |
  tr '\n|m' ' ' |
  awk '{ print "â›„"$1"Â°""ðŸŒž"$2"Â° "}' |
  tr -d '\n' ;
}

getforecast() {
	[ ! -e "$weatherreport" ] && touch "$weatherreport";
		{
      [ -z "$(cat "$weatherreport")" ] || isOldAndIsInet;
    } &&
		curl -sf "wttr.in/$LOCATION" > "$weatherreport" &&
		uptime="$(LANG=es_AR.UTF-8 date -d "$(stat -c %y "$weatherreport")" '+%A %-d/%-m at %-H:%M' | sed 's|^\([a-z]\{2,\}\)|\u\1|1')" &&
		echo -e "${RED}Last update: ${uptime}${NORMAL}" >> "$weatherreport"
}

getTemperaturaActual () {
	[ ! -e "$temp" ] && touch "$temp";
	{
    [ -z "$(cat "$temp")" ] || isOldAndIsInet;
  } &&
  echo -e "<b>Temperatura</b>: $(curl -s wttr.in/${LOCATION}?format=1)" > "$temp" &&
  uptime="$(LANG=es_AR.UTF-8 date -d "$(stat -c %y "$temp")" '+%A %-d/%-m at %-H:%M' |
  sed 's|^\([a-z]\{2,\}\)|\u\1|1')" &&
  echo -e "<b>Last update:</b>\n${uptime}" >> "$temp";
}


case $BUTTON in
	1) notify-send "ðŸŒˆ Weather module" "$(cat "$temp")";;
	2) getTemperaturaActual; getforecast && notify-send -t 2000 "â›… Refreshing...";;
	3) setsid -f falacritty -o window.dimensions.columns=125 -o window.dimensions.lines=45 -e less -Srf "$weatherreport";;
	6) setsid -f "$TERMINAL" -e "$EDITOR" "$0";;
esac

[ ! -e "$weatherreport" ] && touch "$weatherreport" && getforecast
[ ! -e "$temp" ] && touch "$temp"&& getTemperaturaActual

isOldAndIsInet && getforecast && getTemperaturaActual;
showweather
