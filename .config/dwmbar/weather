#!/bin/bash

#LOCATION="42.134028,-123.639673" # Cave Junction OR, USA
#LOCATION="-34.559136,-58.463755" # CABA
# LOCATION="41.367,2.135" # Barcelona
# LOCATION="36.79243,-6.31457" # Sanlúcar
# LOCATION="39.474153,-0.377866" # Valencia
LOCATION="39.485487,-0.3612157" # Valencia, Benimaclet

# Variables
weatherReport="${XDG_DATA_HOME:-$HOME/.local/share}/weatherReport"
temp_data="${XDG_DATA_HOME:-$HOME/.local/share}/temp_data.json"

#icons
sun_icon=$(curl -s wttr.in/Valencia?format=%c)

isOldAndIsInet () {
    # Update solo con inet y si el último update son más viejos que la edad objetivo
    ping -q -c 1 1.1.1.1 >/dev/null 2>&1 &&
    { [ -f "$temp_data" ] &&
        [ $(( $(date "+%s") - $(stat -c %Y "$temp_data"))) -ge 3600 ] && find "$temp_data" -delete;
        [ -f "$weatherReport" ] &&
        [ $(( $(date "+%s") - $(stat -c %Y "$weatherReport"))) -ge 3600 ] && find "$weatherReport" -delete;
    }
}

langDate() {
    LANG=es_AR.UTF-8 date -d "$(stat -c %y "$1")" '+%A %-d/%-m at %-H:%M' | sed 's|^\([a-z]\{2,\}\)|\u\1|1'
}

getforecast() {
    [ ! -e "$weatherReport" ] && touch "$weatherReport";
    {
        [ -z "$(cat "$weatherReport")" ] || isOldAndIsInet;
    } &&
    curl -sf "v2d.wttr.in/$LOCATION" |
    head -n -1 > "$weatherReport" && uptime="$(langDate "$weatherReport")" &&
    echo -e "${RED}Last update: ${uptime}${NORMAL}" >> "$weatherReport"
}

getData () {
    [ ! -e "$temp_data" ] && touch "$temp_data";
    [ -z "$(cat "$temp_data")" ] || isOldAndIsInet &&
    curl -s wttr.in/${LOCATION}?format=j1 | jq '.current_condition[0] * .weather[0].astronomy[0]' > "$temp_data";
}

show () {
    parJQ () { jq -r "$1" "$temp_data"; }
    feelsLike=$(parJQ ".FeelsLikeC")
    temp_C=$(parJQ ".temp_C")
    humidity=$(parJQ ".humidity")
    cloudCover=$(parJQ ".cloudcover")
    uvIndex=$(parJQ ".uvIndex")
    weatherDesc=$(parJQ ".weatherDesc[0].value")
    moon_phase=$(parJQ ".moon_phase")
    moonrise=$(parJQ ".moonrise")
    sunrise=$(parJQ ".sunrise")
    sunset=$(parJQ ".sunset")
    localObsDateTime=$(parJQ ".localObsDateTime")
    dunstify -t 0 "$sun_icon Weather: $weatherDesc" "Feels like: $feelsLike°C ($temp_C°C)
Humidity: $humidity%
Cloud cover: $cloudCover%
UV Index: $uvIndex
===============
Moon Phase: $moon_phase
Moon Rise: $moonrise
Sun Rise: $sunrise
Sun Set: $sunset
===============
<b>Last update:</b>
$localObsDateTime";
}

case $BUTTON in
    1) show;;
    3) setsid -f falacritty -o window.dimensions.columns=74 -o window.dimensions.lines=47 -e less -Srf "$weatherReport" ;;
    6) setsid -f "$TERMINAL" -e "$EDITOR" "$0" ;;
esac

[ ! -e "$weatherReport" ] && touch "$weatherReport" && getforecast
[ ! -e "$temp_data" ] && touch "$temp_data"&& getData

isOldAndIsInet && getforecast && getData;
printf '%s' "$sun_icon"
